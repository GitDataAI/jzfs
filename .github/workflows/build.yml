name: Build and Push with GitHub Actions Artifacts

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    name: Build
    runs-on: [self-hosted]
    outputs:
      version: "${{ steps.version.outputs.version }}"
    env:
      CARGO_INCREMENTAL: 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -q update
          sudo apt-get -q install -y \
            build-essential \
            openssl \
            libssl-dev \
            pkg-config \
            cmake

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-02-01
          targets: x86_64-unknown-linux-musl

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build project
        run: |
          mkdir -p target/release
          cargo build --release --workspace \
            --locked \
            --target-dir ./target

      - name: Get version
        id: version
        shell: bash
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            sanitized_version="${GITHUB_REF#refs/tags/}"
            sanitized_version=$(echo "$sanitized_version" | sed 's/[^a-zA-Z0-9_.-]//g')
            echo "version=$sanitized_version" >> $GITHUB_OUTPUT
          else
            echo "version=$GITHUB_SHA" >> $GITHUB_OUTPUT
          fi

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Build and Push GitDataOs
        uses: docker/build-push-action@v4
        with:
          tags: |
            gitdatateam/gitdataos:${{ needs.build.outputs.version }}
            gitdatateam/gitdataos:latest
          push: true
          cache-from: type=gha
          file: ./Dockerfile
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Build and Push GitDataWeb
        run: |
          cd vite-project
          pnpm install
          pnpm run build

      - name: Build and Push GitDataOs
        uses: docker/build-push-action@v4
        with:
          tags: |
            gitdatateam/gitdataweb:${{ needs.build.outputs.version }}
            gitdatateam/gitdataweb:latest
          push: true
          file: ./vite-project/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64